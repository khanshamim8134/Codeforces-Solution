#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
int main()
{
    ll n,m;
    cin>>n>>m;
        vector<pair<ll,ll>> adj[n+1];
        for(ll i=1; i<=m; i++){
            ll a,b,c;
            cin>>a>>b>>c;
            adj[a].push_back({b,c});
            adj[b].push_back({a,c});
        }
      priority_queue<pair<ll,ll>,vector<pair<ll,ll>>,greater<pair<ll,ll>>>pq;
        vector<ll> dist(n+1,1e18), parent(n+1);
        for(ll i=1; i<=n; i++){
            parent[i]=i;
        }

        dist[1]=0;
        pq.push({0,1});

        while(!pq.empty()){
            auto it = pq.top();
            ll dis = it.first;
            ll node = it.second;
            pq.pop();
            for(auto it : adj[node]){
                   ll adjNode = it.first;
                   ll adjW = it.second;
                   if(adjW + dis < dist[adjNode]){
                       dist[adjNode] = adjW + dis;
                       pq.push({dis+adjW,adjNode});
                       parent[adjNode]=node;
                   }
            }
        }
        if(dist[n] == 1e18) return cout<<"-1"<<endl,0;

        vector<ll> path;
        int node = n;
        while(parent[node] != node){
            path.push_back(node);
            node = parent[node];
        }
        path.push_back(1);
        reverse(path.begin(),path.end());
        for(auto u:path){
            cout<<u<<" ";
        }
        cout<<endl;
        return 0;
    }

